{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction SolidityScan is a cloud-based smart-contract vulnerability scanner built to discover vulnerabilities and help publish audit reports after vulnerability mitigations. SolidityScan scans all of your smart contract code to detect potential security vulnerabilities and anti-patterns. The product aims to sit in your development pipeline, run the scan on your contract's code, and flag known vulnerabilities. The end output from the product is an audit report of your code, which contains information on which parts of your code might lead to potential security vulnerabilities. The application also outputs a security score, which helps developers understand the security posture of their contracts. They can then rescan their contracts after bug fixing to improve their score and publish the audit report to the community. What are we trying to do? SolidityScan aims to provide security audits with just a click of a button, helping developers, organizations, and security teams to discover security vulnerabilities and publish reports once they have been fixed. Solidity Scan Features: Do a Quickscan for a Contract deployed on Chain Do a Quickscan for a particular deployed contract whose codes are published on the supported explorers. Scan a Project Scan your public and private repositories hosted on Github. Scan a Contract deployed on Chain Initiate scans on contracts deployed both on Testnets and Mainnets. SolidityScan currently supports Ethereum, Binance, Polygon, Avalanche and Fantom. Upload and Scan a .sol File Upload your Solidity Files (.sol, .Sol) and scan them. Generate and Publish Reports Generate your scan reports to get a detailed view on the vulnerabilities found in your source code. With your issues fixed, publish your report and share over the public link with your stakeholders. Integrations Integrate SolidityScan with your github repository to conduct scans on your private repos.","title":"Introduction"},{"location":"#introduction","text":"SolidityScan is a cloud-based smart-contract vulnerability scanner built to discover vulnerabilities and help publish audit reports after vulnerability mitigations. SolidityScan scans all of your smart contract code to detect potential security vulnerabilities and anti-patterns. The product aims to sit in your development pipeline, run the scan on your contract's code, and flag known vulnerabilities. The end output from the product is an audit report of your code, which contains information on which parts of your code might lead to potential security vulnerabilities. The application also outputs a security score, which helps developers understand the security posture of their contracts. They can then rescan their contracts after bug fixing to improve their score and publish the audit report to the community.","title":"Introduction"},{"location":"#what-are-we-trying-to-do","text":"SolidityScan aims to provide security audits with just a click of a button, helping developers, organizations, and security teams to discover security vulnerabilities and publish reports once they have been fixed.","title":"What are we trying to do?"},{"location":"#solidity-scan-features","text":"Do a Quickscan for a Contract deployed on Chain Do a Quickscan for a particular deployed contract whose codes are published on the supported explorers. Scan a Project Scan your public and private repositories hosted on Github. Scan a Contract deployed on Chain Initiate scans on contracts deployed both on Testnets and Mainnets. SolidityScan currently supports Ethereum, Binance, Polygon, Avalanche and Fantom. Upload and Scan a .sol File Upload your Solidity Files (.sol, .Sol) and scan them. Generate and Publish Reports Generate your scan reports to get a detailed view on the vulnerabilities found in your source code. With your issues fixed, publish your report and share over the public link with your stakeholders. Integrations Integrate SolidityScan with your github repository to conduct scans on your private repos.","title":"Solidity Scan Features:"},{"location":"block/","text":"Scanning a Deployed Contract using Solidity Scan We also provide the functionality to scan a particular deployed contract whose codes are published on the supported explorers. The current supported chains and their respective explorers are as below. Ethereum - (etherscan.io) BSC - (bscscan.com) Polygon - (polygonscan.com) Fantom - (ftmscan.com) Avalanche - (snowtrace.io) Cronos - (cronoscan.com) Arbiscan - (arbiscan.io) Celo - (celoscan.io) Aurora - (explorer.aurora.dev) ReefScan - (reefscan.com) Optimism - (optimism.io) Buildbear - (buildbear.io) XDC - (xdc.blocksscan.io) Step 1: Enter the details of the contract Enter the link to the contract from the ledger. Select the blockchain platform on which this transaction has taken place. Also, select the contract chain for this transaction. Please follow the constraints below to avoid scan failure: Navigate to the explorer of the particular blockchain (Ethereum - Etherscan.io). Use the search bar to get your smart contract and check if the source code is verified in the \"Contract\" tab of the selected explorer. Step 2: View the results of the scan On successful completion of the scan, click on it to get more details about the scan. Refer to the Project Scan section to see how to explore the detailed result of a scan. NOTE: Scan History and Custom Settings are only present for Github Repository Scans. Click on the View button to go to the Contract on the respective explorer. Click on the dropdown to see more details about the Contract. Watch the Tutorial on How to Scan a verified contract on Etherscan using SolidityScan.","title":"Scan a Deployed Contract"},{"location":"block/#scanning-a-deployed-contract-using-solidity-scan","text":"We also provide the functionality to scan a particular deployed contract whose codes are published on the supported explorers. The current supported chains and their respective explorers are as below. Ethereum - (etherscan.io) BSC - (bscscan.com) Polygon - (polygonscan.com) Fantom - (ftmscan.com) Avalanche - (snowtrace.io) Cronos - (cronoscan.com) Arbiscan - (arbiscan.io) Celo - (celoscan.io) Aurora - (explorer.aurora.dev) ReefScan - (reefscan.com) Optimism - (optimism.io) Buildbear - (buildbear.io) XDC - (xdc.blocksscan.io)","title":"Scanning a Deployed Contract using Solidity Scan"},{"location":"block/#step-1-enter-the-details-of-the-contract","text":"Enter the link to the contract from the ledger. Select the blockchain platform on which this transaction has taken place. Also, select the contract chain for this transaction.","title":"Step 1: Enter the details of the contract"},{"location":"block/#please-follow-the-constraints-below-to-avoid-scan-failure","text":"Navigate to the explorer of the particular blockchain (Ethereum - Etherscan.io). Use the search bar to get your smart contract and check if the source code is verified in the \"Contract\" tab of the selected explorer.","title":"Please follow the constraints below to avoid scan failure:"},{"location":"block/#step-2-view-the-results-of-the-scan","text":"On successful completion of the scan, click on it to get more details about the scan. Refer to the Project Scan section to see how to explore the detailed result of a scan.","title":"Step 2: View the results of the scan"},{"location":"block/#note-scan-history-and-custom-settings-are-only-present-for-github-repository-scans","text":"Click on the View button to go to the Contract on the respective explorer. Click on the dropdown to see more details about the Contract. Watch the Tutorial on How to Scan a verified contract on Etherscan using SolidityScan.","title":"NOTE: Scan History and Custom Settings are only present for Github Repository Scans."},{"location":"filescan/","text":"Scanning Solidity Files using Solidity Scan We also provide the functionality to scan upto 5 files at one time by uplaoding the solidity files (files with .sol, .Sol extension) to our platform. Step 1: Please Select the Upload Type Begin by choosing either the \"Single File Upload\" option if your project is a single file or the \"Multi-File Upload\" option if it comprises a structured directory with multiple file. Step 2: Enter the details of the contract Enter the name of the project. Either click in the Upload Box or drag and drop file into the box to upload. If you opted for \"Single File Upload\" in this step, you can simply upload your Solidity file and initiate the scanning process. On the other hand, if you've selected \"Multi-File Upload,\" you have to compress your project into a zip file and then proceed with the upload. Step 3: View the results of the scan On successful completion of the scan, click on it to get more details about the scan. Refer to the Project Scan section to see how to explore the detailed result of a scan. NOTE: Scan History and Custom Settings are only present for Online Code Repository Scans.","title":"Upload and Scan Solidity Project"},{"location":"filescan/#scanning-solidity-files-using-solidity-scan","text":"We also provide the functionality to scan upto 5 files at one time by uplaoding the solidity files (files with .sol, .Sol extension) to our platform.","title":"Scanning Solidity Files using Solidity Scan"},{"location":"filescan/#step-1-please-select-the-upload-type","text":"Begin by choosing either the \"Single File Upload\" option if your project is a single file or the \"Multi-File Upload\" option if it comprises a structured directory with multiple file.","title":"Step 1: Please Select the Upload Type"},{"location":"filescan/#step-2-enter-the-details-of-the-contract","text":"Enter the name of the project. Either click in the Upload Box or drag and drop file into the box to upload. If you opted for \"Single File Upload\" in this step, you can simply upload your Solidity file and initiate the scanning process. On the other hand, if you've selected \"Multi-File Upload,\" you have to compress your project into a zip file and then proceed with the upload.","title":"Step 2: Enter the details of the contract"},{"location":"filescan/#step-3-view-the-results-of-the-scan","text":"On successful completion of the scan, click on it to get more details about the scan. Refer to the Project Scan section to see how to explore the detailed result of a scan.","title":"Step 3: View the results of the scan"},{"location":"filescan/#note-scan-history-and-custom-settings-are-only-present-for-online-code-repository-scans","text":"","title":"NOTE: Scan History and Custom Settings are only present for Online Code Repository Scans."},{"location":"integrations/","text":"Integrating the App with Diffrent Services You have an option to integrate our app with your GitHub account. In the future, we will also be providing the option to integrate it with Slack and JIRA. Step 1: Request to Connect With Github First, Make sure you are on the Pro or Custom Plan. This Service is only available for these Plans. Once your plan is upgraded, click on the Connect Button to send a request to connect to Github. Step 2: Login to Your Github Account A pop-up will open, asking you to log in to your Github Application. Step 3: Authorize your Github App Once the login is successful, authorize the app to get data from your GitHub account, as shown below. Step 4: View the detailed result of the scan After you have successfully connected the app to your GitHub account, you can see the integration status. You also have an option to Disconnect your GitHub account if you want. Watch this tutorial on How to Integrate your Github account with SolidityScan.","title":"Integrations"},{"location":"integrations/#integrating-the-app-with-diffrent-services","text":"You have an option to integrate our app with your GitHub account. In the future, we will also be providing the option to integrate it with Slack and JIRA.","title":"Integrating the App with Diffrent Services"},{"location":"integrations/#step-1-request-to-connect-with-github","text":"First, Make sure you are on the Pro or Custom Plan. This Service is only available for these Plans. Once your plan is upgraded, click on the Connect Button to send a request to connect to Github.","title":"Step 1: Request to Connect With Github"},{"location":"integrations/#step-2-login-to-your-github-account","text":"A pop-up will open, asking you to log in to your Github Application.","title":"Step 2: Login to Your Github Account"},{"location":"integrations/#step-3-authorize-your-github-app","text":"Once the login is successful, authorize the app to get data from your GitHub account, as shown below.","title":"Step 3: Authorize your Github App"},{"location":"integrations/#step-4-view-the-detailed-result-of-the-scan","text":"After you have successfully connected the app to your GitHub account, you can see the integration status. You also have an option to Disconnect your GitHub account if you want. Watch this tutorial on How to Integrate your Github account with SolidityScan.","title":"Step 4: View the detailed result of the scan"},{"location":"organisation/","text":"Create and Manage Organisation SolidityScan platform provides the feature to create and manage Organsition. You can add user to your organisation and assign them roles based on the resources access you want the users to have. This Fetaure is available only for our Pro and Custom plan users. NOTE Members you add to the organisation do not need to have an active plan to be added to your oraganisation. Create an Organisation Click on Create Organisation Button. Enter your Organisation Name. Once you see that the organisation name you entered is available, Click on Create Organisation to send your request for creating the Organisation. Invite Members to your Organisation Once your Organisation Creation request is approved, Click on Invite Member Button to add users to your organisation. You can add users in a batch or individually as per your requirement. Enter the email of the user and select the role you want to assign to the user. Then click on Add or press Enter to add the user Once the batch of users you want to add is ready, Click on Add users button to send the invite to the users. User Roles policy for Organisation Members Users with a Viewer role will be limited to viewing results and performing read actions. Users with this role cannot perform, write or modify actions on the platform. They can perform the following actions: They can view scan results for both Project Scans and Verified Contracts scans . They can view published/unpublished reports. They also have the option to download and share PDFs of published reports. Users with an Editor role have full access to perform write actions on the platform along with all the access that a Viewer has. They can perform the following actions: They can start Scans and delete them as well They have access to modify bug status. They can generate and publish reports for scans done. They have the access to view Private API keys Users with an Admin role have all the access that an Editor has, with the added privilege of managing user roles, including the ability to add or remove user roles. Organisation Members do not have access to perform the following actions: They cannot make any changes related to plan updation and scan credit top ups in the billing sections. They do not have access to view the billing sections. They cannot add any integrations to the platform They do not have access to Generate/Re-generate/Delete Private API keys. Managing your Organisation After you have successfully created your organisation, you can manage the roles of the users, present in your organisation. You can see the users who have accepted your organisation invititation request. You also have the option to delete a user from the organisation.","title":"Organisations"},{"location":"organisation/#create-and-manage-organisation","text":"SolidityScan platform provides the feature to create and manage Organsition. You can add user to your organisation and assign them roles based on the resources access you want the users to have. This Fetaure is available only for our Pro and Custom plan users.","title":"Create and Manage Organisation"},{"location":"organisation/#note","text":"Members you add to the organisation do not need to have an active plan to be added to your oraganisation.","title":"NOTE"},{"location":"organisation/#create-an-organisation","text":"Click on Create Organisation Button. Enter your Organisation Name. Once you see that the organisation name you entered is available, Click on Create Organisation to send your request for creating the Organisation.","title":"Create an Organisation"},{"location":"organisation/#invite-members-to-your-organisation","text":"Once your Organisation Creation request is approved, Click on Invite Member Button to add users to your organisation. You can add users in a batch or individually as per your requirement. Enter the email of the user and select the role you want to assign to the user. Then click on Add or press Enter to add the user Once the batch of users you want to add is ready, Click on Add users button to send the invite to the users.","title":"Invite Members to your Organisation"},{"location":"organisation/#user-roles-policy-for-organisation-members","text":"Users with a Viewer role will be limited to viewing results and performing read actions. Users with this role cannot perform, write or modify actions on the platform. They can perform the following actions: They can view scan results for both Project Scans and Verified Contracts scans . They can view published/unpublished reports. They also have the option to download and share PDFs of published reports. Users with an Editor role have full access to perform write actions on the platform along with all the access that a Viewer has. They can perform the following actions: They can start Scans and delete them as well They have access to modify bug status. They can generate and publish reports for scans done. They have the access to view Private API keys Users with an Admin role have all the access that an Editor has, with the added privilege of managing user roles, including the ability to add or remove user roles. Organisation Members do not have access to perform the following actions: They cannot make any changes related to plan updation and scan credit top ups in the billing sections. They do not have access to view the billing sections. They cannot add any integrations to the platform They do not have access to Generate/Re-generate/Delete Private API keys.","title":"User Roles policy for Organisation Members"},{"location":"organisation/#managing-your-organisation","text":"After you have successfully created your organisation, you can manage the roles of the users, present in your organisation. You can see the users who have accepted your organisation invititation request. You also have the option to delete a user from the organisation.","title":"Managing your Organisation"},{"location":"project/","text":"Scanning a Project using Solidity Scan Let's go through the process of scanning a project/repository using Solidity Scan. We've tried to make this process as simple and automated as possible. Create an account on Solidity Scan First, let's create an account on Solidity Scan. If you have already created an account, you can skip this o create a new account, Let's head on to: solidityscan.com . Enter the project you need to Scan Once the account is created, you can start scanning your solidity project by following these steps: STEP 1: Enter Project Information Enter the project's name and the repository link for the project. When entering the link please verify the following to avoid scan failure: Ensure the link is to a Git repository containing Solidity (.sol) files. Supported Platforms Gitlab/Github/Bitbucket Verify if the repository is public, for private repositories, please integrate your GitHub/Gitlab/Bitbucket from the Integrations tab. Also, select if the repository is public or private. Click on the next button to proceed to Step 2. STEP 2: Select Branch and Files to be Scanned After you have entered the git repository link, you will be asked to select a branch that contains the project which has to be scanned. By default, the default branch on your github repository will be selected. Also you will have an option to select files and folders that you want to scan. The files and folders that are not selected will be skipped in the scanning process. Note: Only solidity files (files with .sol, .Sol extension) will be scanned Once you are done configuring your settings, click on next to proceed to Step 3. STEP 3: Configure Webhooks for Github Actions You have the option to trigger automatic scans using Git Actions. Whenever a new commit will be pushed to the branch, if webhook has been enabled then it will trigger a scan automatically to check if the new changes have any vulnerabilities present. You can only configure webhooks for those github respository which are owned by you (user). Also this funcationality is only possible once you have connected your github account with SolidityScan Application. Here are the steps to do the. After you have configured your settings click on Start Scan Button to initiate the scan. After you have started the scan, you will see the below screen. View the results of the scan On successful completion of the scan, click on it to get more details about the scan. You will have an option to do a re-scan of the project. You can also view the statistics of the scan and the details of the issues found in the project. Overview of the Project You get the an understanding about how secure your project is and get an overall idea about the issue and vulnerabilities in your project. Using the quantitative scoring present here, you can draw a quick comparison about the security of the projects and how it has evolved over the time. Detailed Result of the scan. To get a more detailed scan result, you can navigate through the tabs. Click on the Detailed result tab to see the issues and vulnerabilities found in the scan in a detailed way. There is an option to view vulnerability description in expanded view. You can also choose to close the description box if its obstructing the Code View. Filtering bugs using Confidence/Vulnerability Parameter and Bug Status There might be times where our tool might detetct a lot of vulnerabilities in your code. To find and focus on what is important for you, you can filter the issues/vulnerabilities/bugs based on the following paramenter: Severity of Vulnerability: (High, Critical, Medium, Low, Info, Gas) Confidence rating of Vulnerabilty Detector: (Certain, Firm, Tentative) Vulnerabilities Flag of bug status : (Won't Fix, False Positive, Pending Fixes) Updating Bug Status We have a functionality where we keep a track of the status of the bugs present. You can update the status of the vulnerabilities found in the scan basis to track the work. Here we ask a bit of your help to update the status of the vulnerabilities found so that we can improve our scanner engine to give better results. All the Vulnerabilities in your code are listed here, along with their status. Click on any one of the vulnerabilities, and you will find the list of files containing these vulnerabilities along with their status. You also have an option to multiple select issues or batch of issues together and mark their status atr once. If you feel you don't need to fix this vulnerability and it is better the way it is, please mark the status as Won't fix. To mark wont-fix status you also have to add a comment while doing it explaining why there isn't a need to fix the vulnerablity. If you feel that the vulnerability found is a False Positive, Please mark that. There is also an option to reset a bug status to default again if you feel if you might need to fix it. The scanner automatically updates the status of bugs found to be fixed after performing the rescan. Updating Comments on Bug You can also update comments on your comments done on a bug. Watch the Tutorial on How to Navigate through your vulnerability scan results on SolidityScan. Configure Settings of a Project You can Configure Settings on a Project for future scans. There are functionalities to update directories and files to be scanned and also to enable ans disable webhooks for automatic scans. Update Webhook Settings for Github Actions You have the option to trigger automatic scans using Github Actions. Whenever a new commit will be pushed to the branch, if webhook has been enabled then it will trigger a scan automatically to check if the new changes have any vulnerabilities present. You can only configure webhooks for those github respository which are owned by you (user). Also this funcationality is only possible once you have connected your github account with SolidityScan Application. Here are the steps to do the. Update Files to be Scanned You can update the files and folders that are to be scanned by selecting the checkboxes and clicking on Update Button. The files that you have not selected will be skipped and will not be scanned in future. Note: Only solidity files (files with .sol, .Sol extension) will be scanned. Files that will not be scanned will not be highlighted Watch the Tutorial on How to Enable Github actions to facilitate continuous security using SolidityScan. View History of Scans You can see the history of the scans done for this project here. All the re-scans done can be seen here. You will also be able to see which files from your projects were scanned for this scan. Click on any one of the View Scan Result to view the result for that scan.","title":"Scan a Online Git Repository"},{"location":"project/#scanning-a-project-using-solidity-scan","text":"Let's go through the process of scanning a project/repository using Solidity Scan. We've tried to make this process as simple and automated as possible.","title":"Scanning a Project using Solidity Scan"},{"location":"project/#create-an-account-on-solidity-scan","text":"First, let's create an account on Solidity Scan. If you have already created an account, you can skip this o create a new account, Let's head on to: solidityscan.com .","title":"Create an account on Solidity Scan"},{"location":"project/#enter-the-project-you-need-to-scan","text":"Once the account is created, you can start scanning your solidity project by following these steps:","title":"Enter the project you need to Scan"},{"location":"project/#step-1-enter-project-information","text":"Enter the project's name and the repository link for the project. When entering the link please verify the following to avoid scan failure: Ensure the link is to a Git repository containing Solidity (.sol) files. Supported Platforms Gitlab/Github/Bitbucket Verify if the repository is public, for private repositories, please integrate your GitHub/Gitlab/Bitbucket from the Integrations tab. Also, select if the repository is public or private. Click on the next button to proceed to Step 2.","title":"STEP 1: Enter Project Information"},{"location":"project/#step-2-select-branch-and-files-to-be-scanned","text":"After you have entered the git repository link, you will be asked to select a branch that contains the project which has to be scanned. By default, the default branch on your github repository will be selected. Also you will have an option to select files and folders that you want to scan. The files and folders that are not selected will be skipped in the scanning process.","title":"STEP 2: Select Branch and Files to be Scanned"},{"location":"project/#note-only-solidity-files-files-with-sol-sol-extension-will-be-scanned","text":"Once you are done configuring your settings, click on next to proceed to Step 3.","title":"Note: Only solidity files (files with .sol, .Sol extension) will be scanned"},{"location":"project/#step-3-configure-webhooks-for-github-actions","text":"You have the option to trigger automatic scans using Git Actions. Whenever a new commit will be pushed to the branch, if webhook has been enabled then it will trigger a scan automatically to check if the new changes have any vulnerabilities present. You can only configure webhooks for those github respository which are owned by you (user). Also this funcationality is only possible once you have connected your github account with SolidityScan Application. Here are the steps to do the. After you have configured your settings click on Start Scan Button to initiate the scan. After you have started the scan, you will see the below screen.","title":"STEP 3: Configure Webhooks for Github Actions"},{"location":"project/#view-the-results-of-the-scan","text":"On successful completion of the scan, click on it to get more details about the scan. You will have an option to do a re-scan of the project. You can also view the statistics of the scan and the details of the issues found in the project.","title":"View the results of the scan"},{"location":"project/#overview-of-the-project","text":"You get the an understanding about how secure your project is and get an overall idea about the issue and vulnerabilities in your project. Using the quantitative scoring present here, you can draw a quick comparison about the security of the projects and how it has evolved over the time.","title":"Overview of the Project"},{"location":"project/#detailed-result-of-the-scan","text":"To get a more detailed scan result, you can navigate through the tabs. Click on the Detailed result tab to see the issues and vulnerabilities found in the scan in a detailed way. There is an option to view vulnerability description in expanded view. You can also choose to close the description box if its obstructing the Code View.","title":"Detailed Result of the scan."},{"location":"project/#filtering-bugs-using-confidencevulnerability-parameter-and-bug-status","text":"There might be times where our tool might detetct a lot of vulnerabilities in your code. To find and focus on what is important for you, you can filter the issues/vulnerabilities/bugs based on the following paramenter: Severity of Vulnerability: (High, Critical, Medium, Low, Info, Gas) Confidence rating of Vulnerabilty Detector: (Certain, Firm, Tentative) Vulnerabilities Flag of bug status : (Won't Fix, False Positive, Pending Fixes)","title":"Filtering bugs using Confidence/Vulnerability Parameter and Bug Status"},{"location":"project/#updating-bug-status","text":"We have a functionality where we keep a track of the status of the bugs present. You can update the status of the vulnerabilities found in the scan basis to track the work. Here we ask a bit of your help to update the status of the vulnerabilities found so that we can improve our scanner engine to give better results. All the Vulnerabilities in your code are listed here, along with their status. Click on any one of the vulnerabilities, and you will find the list of files containing these vulnerabilities along with their status. You also have an option to multiple select issues or batch of issues together and mark their status atr once. If you feel you don't need to fix this vulnerability and it is better the way it is, please mark the status as Won't fix. To mark wont-fix status you also have to add a comment while doing it explaining why there isn't a need to fix the vulnerablity. If you feel that the vulnerability found is a False Positive, Please mark that. There is also an option to reset a bug status to default again if you feel if you might need to fix it. The scanner automatically updates the status of bugs found to be fixed after performing the rescan.","title":"Updating Bug Status"},{"location":"project/#updating-comments-on-bug","text":"You can also update comments on your comments done on a bug. Watch the Tutorial on How to Navigate through your vulnerability scan results on SolidityScan.","title":"Updating Comments on Bug"},{"location":"project/#configure-settings-of-a-project","text":"You can Configure Settings on a Project for future scans. There are functionalities to update directories and files to be scanned and also to enable ans disable webhooks for automatic scans.","title":"Configure Settings of a Project"},{"location":"project/#update-webhook-settings-for-github-actions","text":"You have the option to trigger automatic scans using Github Actions. Whenever a new commit will be pushed to the branch, if webhook has been enabled then it will trigger a scan automatically to check if the new changes have any vulnerabilities present. You can only configure webhooks for those github respository which are owned by you (user). Also this funcationality is only possible once you have connected your github account with SolidityScan Application. Here are the steps to do the.","title":"Update Webhook Settings for Github Actions"},{"location":"project/#update-files-to-be-scanned","text":"You can update the files and folders that are to be scanned by selecting the checkboxes and clicking on Update Button. The files that you have not selected will be skipped and will not be scanned in future.","title":"Update Files to be Scanned"},{"location":"project/#note-only-solidity-files-files-with-sol-sol-extension-will-be-scanned-files-that-will-not-be-scanned-will-not-be-highlighted","text":"Watch the Tutorial on How to Enable Github actions to facilitate continuous security using SolidityScan.","title":"Note: Only solidity files (files with .sol, .Sol extension) will be scanned. Files that will not be scanned will not be highlighted"},{"location":"project/#view-history-of-scans","text":"You can see the history of the scans done for this project here. All the re-scans done can be seen here. You will also be able to see which files from your projects were scanned for this scan. Click on any one of the View Scan Result to view the result for that scan.","title":"View History of Scans"},{"location":"quickscan/","text":"Doing a Quickscan for a Verfied Smart Contract We also provide the functionality to do a Quickscan for a particular deployed contract whose codes are published on the supported explorers. The current supported chains and their respective explorers are as below. Ethereum - (etherscan.io) BSC - (bscscan.com) Polygon - (polygonscan.com) Fantom - (ftmscan.com) Avalanche - (snowtrace.io) Cronos - (cronoscan.com) Arbiscan - (arbiscan.io) Celo - (celoscan.io) Aurora - (explorer.aurora.dev) ReefScan - (reefscan.com) Optimism - (optimism.io) Buildbear - (buildbear.io) XDC - (xdc.blocksscan.io) Step 1: Enter the details of the contract Head over to the Quickscan Page Enter the link to the contract from the ledger. Select the blockchain platform on which this transaction has taken place. Also, select the contract chain for this transaction. Please follow the constraints below to avoid scan failure: Navigate to the explorer of the particular blockchain (Ethereum - Etherscan.io). Use the search bar to get your smart contract and check if the source code is verified in the \"Contract\" tab of the selected explorer. Step 2: View the results of the scan On successful completion of the scan, you will be taken to the result section. You can see an overview of the scan done here. It also gives you a Threat Scan Summary which identifies potential rug pull scams by providing an in-depth analysis of a smart contract's code Step 3: View Recent Scans List You can also see the recent scans done using Quickscan.","title":"Do a Quickscan of a Deployed Contract"},{"location":"quickscan/#doing-a-quickscan-for-a-verfied-smart-contract","text":"We also provide the functionality to do a Quickscan for a particular deployed contract whose codes are published on the supported explorers. The current supported chains and their respective explorers are as below. Ethereum - (etherscan.io) BSC - (bscscan.com) Polygon - (polygonscan.com) Fantom - (ftmscan.com) Avalanche - (snowtrace.io) Cronos - (cronoscan.com) Arbiscan - (arbiscan.io) Celo - (celoscan.io) Aurora - (explorer.aurora.dev) ReefScan - (reefscan.com) Optimism - (optimism.io) Buildbear - (buildbear.io) XDC - (xdc.blocksscan.io)","title":"Doing a Quickscan for a Verfied Smart Contract"},{"location":"quickscan/#step-1-enter-the-details-of-the-contract","text":"Head over to the Quickscan Page Enter the link to the contract from the ledger. Select the blockchain platform on which this transaction has taken place. Also, select the contract chain for this transaction.","title":"Step 1: Enter the details of the contract"},{"location":"quickscan/#please-follow-the-constraints-below-to-avoid-scan-failure","text":"Navigate to the explorer of the particular blockchain (Ethereum - Etherscan.io). Use the search bar to get your smart contract and check if the source code is verified in the \"Contract\" tab of the selected explorer.","title":"Please follow the constraints below to avoid scan failure:"},{"location":"quickscan/#step-2-view-the-results-of-the-scan","text":"On successful completion of the scan, you will be taken to the result section. You can see an overview of the scan done here. It also gives you a Threat Scan Summary which identifies potential rug pull scams by providing an in-depth analysis of a smart contract's code","title":"Step 2: View the results of the scan"},{"location":"quickscan/#step-3-view-recent-scans-list","text":"You can also see the recent scans done using Quickscan.","title":"Step 3: View Recent Scans List"},{"location":"report/","text":"Generate a report for the scan done Once a scan is done, you have the option to generate and publish a report of the scan. You need to follow the following step to do so: Step 1: Generate the Report First, Please scan a project or a deployed contract. If you have not scanned anything yet, then head over here to scan a project or here to scan a deployed contract or to scan a file . Once you have finished scanning a project or a deployed contract or a file, click on Generate Report button, as shown below Once you have generated the report, you will have the option to View your Report. Step 2: Publish Your Report Once you have gone through the report and updated its results, you also have an option to Publish a report for the scan that was carried out so that it can be shared with anyone. To Publish a Report, Click on the Publish Report button as shown below. You will see a form with prefilled data. It contains some general information about the Report. After reviewing it once, click on Next to go to the final page of the form. Enter the contact information of the person or organization publishing the report. You can choose to make the information private or public. Once done, click on Publish Report button to submit your request for Publishing your Report. You can publish two types of Report: Self Published Reports Verfied Reports Self Published Reports A Self-Published Report refers to a document in which a user takes responsibility for identifying and documenting false positive bugs. Unlike traditional auditing processes conducted by external teams, this report undergoes scrutiny directly from the user who has identified and reported the potential issues. Verified Reports A verified report constitutes a verification assertion highlighting false positives identified by the external team within the automated report. It is important to note that a verified report should not be confused with a manual audit report. Step 3: Explore Published Reports. You can see the history of the Published Reports for different Scans here. Once you have submitted a request for publishing your report, you can see the report here, along with the status of your request. Once your request is approved, you can view your report here and also copy the Public URL of your report from here. Step 4: Download Report. Once you have published your report and it has been approved by our team, you can also download it as a PDf and share it offline.","title":"Generate and Publish Reports"},{"location":"report/#generate-a-report-for-the-scan-done","text":"Once a scan is done, you have the option to generate and publish a report of the scan. You need to follow the following step to do so:","title":"Generate a report for the scan done"},{"location":"report/#step-1-generate-the-report","text":"First, Please scan a project or a deployed contract. If you have not scanned anything yet, then head over here to scan a project or here to scan a deployed contract or to scan a file . Once you have finished scanning a project or a deployed contract or a file, click on Generate Report button, as shown below Once you have generated the report, you will have the option to View your Report.","title":"Step 1: Generate the Report"},{"location":"report/#step-2-publish-your-report","text":"Once you have gone through the report and updated its results, you also have an option to Publish a report for the scan that was carried out so that it can be shared with anyone. To Publish a Report, Click on the Publish Report button as shown below. You will see a form with prefilled data. It contains some general information about the Report. After reviewing it once, click on Next to go to the final page of the form. Enter the contact information of the person or organization publishing the report. You can choose to make the information private or public. Once done, click on Publish Report button to submit your request for Publishing your Report. You can publish two types of Report: Self Published Reports Verfied Reports","title":"Step 2: Publish Your Report"},{"location":"report/#self-published-reports","text":"A Self-Published Report refers to a document in which a user takes responsibility for identifying and documenting false positive bugs. Unlike traditional auditing processes conducted by external teams, this report undergoes scrutiny directly from the user who has identified and reported the potential issues.","title":"Self Published Reports"},{"location":"report/#verified-reports","text":"A verified report constitutes a verification assertion highlighting false positives identified by the external team within the automated report. It is important to note that a verified report should not be confused with a manual audit report.","title":"Verified Reports"},{"location":"report/#step-3-explore-published-reports","text":"You can see the history of the Published Reports for different Scans here. Once you have submitted a request for publishing your report, you can see the report here, along with the status of your request. Once your request is approved, you can view your report here and also copy the Public URL of your report from here.","title":"Step 3: Explore Published Reports."},{"location":"report/#step-4-download-report","text":"Once you have published your report and it has been approved by our team, you can also download it as a PDf and share it offline.","title":"Step 4: Download Report."}]}